fn y() {
	// recurse
	y();

	4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*/*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*/4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
	*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4
}

fn value() {
	let x = 5 + 5 * 5;
	
	2 + if true {
		2*x*x*x - 5*x*x + 3*x - 17
	} else {
		-2
	}
}

fn main() {
	value()
}